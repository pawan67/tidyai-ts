name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

  build-and-package:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Install pkg
      run: npm install -g pkg

    - name: Package for Linux
      if: matrix.os == 'ubuntu-latest'
      run: pkg dist/index.js --targets node18-linux-x64 --output tidyai-linux

    - name: Package for Windows
      if: matrix.os == 'windows-latest'
      run: pkg dist/index.js --targets node18-win-x64 --output tidyai-win.exe

    - name: Package for macOS
      if: matrix.os == 'macos-latest'
      run: pkg dist/index.js --targets node18-mac-x64 --output tidyai-macos

    - name: Upload Linux package
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./tidyai-linux
        asset_name: tidyai-linux
        asset_content_type: application/octet-stream

    - name: Upload Windows package
      if: matrix.os == 'windows-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./tidyai-win.exe
        asset_name: tidyai-win.exe
        asset_content_type: application/octet-stream

    - name: Upload macOS package
      if: matrix.os == 'macos-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./tidyai-macos
        asset_name: tidyai-macos
        asset_content_type: application/octet-stream